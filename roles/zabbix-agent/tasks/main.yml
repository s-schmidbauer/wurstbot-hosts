---
  #######################################
  # ZABBIX AGENT
  #######################################

  - name: zabbix agent - install
    openbsd_pkg: name={{ item }} state=present
    with_items:
      - zabbix-agent-{{ zabbix_version }}

  # configure zabbix prerequisites
  - name: zabbix - create log dir
    file:
      path: /var/log/zabbix/
      owner: _zabbix
      group: _zabbix
      state: directory

  # configure zabbix prerequisites
  - name: zabbix - create scripts dir
    file:
      path: /etc/zabbix/externalscripts
      owner: _zabbix
      group: _zabbix
      state: directory

  - name: zabbix - create log files
    file:
      path: /var/log/zabbix/{{ item }}.log
      owner: _zabbix
      group: _zabbix
      state: touch
    with_items:
      - zabbix_server
      - zabbix_proxy
      - zabbix_agentd
    register: zabbix_log_results

  - name: zabbix - create pid files
    file:
      path: /var/run/{{ item }}.pid
      owner: _zabbix
      group: _zabbix
      state: touch
    with_items:
      - zabbix_server
      - zabbix_proxy
      - zabbix_agentd
    register: zabbix_pid_results

  - name: zabbix agent - config zabbix agent
    blockinfile:
      dest: /etc/zabbix/zabbix_agentd.conf
      block: |
          PidFile=/var/run/zabbix_agentd.pid
          LogType=file
          LogFile=/var/log/zabbix/zabbix_agentd.log
          LogFileSize=10
          EnableRemoteCommands=1
          LogRemoteCommands=1
          Server={{ zabbix_servers |join(', ') }}
          ServerActive={{ zabbix_servers |join(', ') }}
          ListenPort=10050
          Hostname={{ dns_name }}
          ListenIP=0.0.0.0
          Include=/etc/zabbix/userparameters.conf
      state: present
      marker: "# {mark} ANSIBLE MANAGED BLOCK - zabbix agent config"
      create: true
      backup: yes
    when: zabbix_log_results is succeeded and zabbix_pid_results is succeeded
    register: zabbix_agent_config_results

  - name: zabbix agent - config user parameters
    blockinfile:
      dest: /etc/zabbix/userparameters.conf
      block: |
          # mysql
          UserParameter=mysql.status[*],echo "show global status where Variable_name='$1';" | HOME=/var/lib/mysql/DBNAME mysql -N | awk '{print $$2}'
          UserParameter=mysql.version,mysql -V
          UserParameter=mysql.ping,mysqladmin -u {{ zabbix_db_user }} --password={{ zabbix_db_pass }} ping | grep alive | wc -l | tr -d " "
          UserParameter=mysql.uptime,mysqladmin -u {{ zabbix_db_user }} --password={{ zabbix_db_pass }} status | cut -f2 -d ":" | cut -f1 -d "T" | tr -d " "
          UserParameter=mysql.threads,mysqladmin -u {{ zabbix_db_user }} --password={{ zabbix_db_pass }} status | cut -f3 -d ":" | cut -f1 -d "Q" | tr -d " "
          UserParameter=mysql.questions,mysqladmin -u {{ zabbix_db_user }} --password={{ zabbix_db_pass }} status | cut -f4 -d ":"|cut -f1 -d "S" | tr -d " "
          UserParameter=mysql.slowqueries,mysqladmin -u {{ zabbix_db_user }} --password={{ zabbix_db_pass }} status | cut -f5 -d ":" | cut -f1 -d "O" | tr -d " "
          UserParameter=mysql.qps,mysqladmin -u {{ zabbix_db_user }} --password={{ zabbix_db_pass }} status | cut -f9 -d ":" | tr -d " "
      state: present
      marker: "# {mark} ANSIBLE MANAGED BLOCK - zabbix agent userparams config"
      create: true
      backup: yes
    register: zabbix_agent_userparams_results

  - name: zabbix agent - config agent mysql parameters
    blockinfile:
      dest: /etc/my.cnf
      block: |
            [client]
            user            = {{ zabbix_db_user }}
            password        = {{ zabbix_db_pass }}
            port            = 3306
      state: present
      marker: "# {mark} ANSIBLE MANAGED BLOCK - zabbix agent mysql config"
      create: true
      backup: yes

  - name: zabbix agent - started
    service: name=zabbix_agentd state=started

  - name: zabbix agent - enable
    shell: rcctl enable zabbix_agentd
