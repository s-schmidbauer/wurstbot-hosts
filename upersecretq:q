[1mdiff --git a/group_vars/all_hosts.yml b/group_vars/all_hosts.yml[m
[1mindex 3f6f71c..0bc0fe9 100644[m
[1m--- a/group_vars/all_hosts.yml[m
[1m+++ b/group_vars/all_hosts.yml[m
[36m@@ -38,6 +38,8 @@[m [mbgp_pass: supersecret[m
 [m
 # PF[m
 ext_if: re0[m
[32m+[m[32mmax_src_conn: 45[m
[32m+[m[32mmax_src_conn_rate: 15/5[m
 [m
 # VPN[m
 # bandwidth queue for all iked traffic.[m
[36m@@ -198,42 +200,42 @@[m [mnagios_password: supersecret[m
 [m
 nagios_guests:[m
   mick:[m
[31m-    nagios_guest_password: supersecret[m
[32m+[m[32m    nagios_guest_password: 786pWnuv[m
     nagios_guest_email: mick.gortenmulder@sentia.com[m
     nagios_guest_host: managedcloudsoftware.com[m
     nagios_guest_ip: 62.195.130.48[m
     nagios_monitor_tls: true[m
     nagios_monitor_ssh: false[m
   izzi:[m
[31m-    nagios_guest_password: supersecret[m
[32m+[m[32m    nagios_guest_password: pLE5kCLk[m
     nagios_guest_email: info@izabelabartyzel.com[m
     nagios_guest_host: www.riderunrumble.com[m
     nagios_guest_ip: 52.85.255.67[m
     nagios_monitor_tls: true[m
     nagios_monitor_ssh: false[m
   jaro:[m
[31m-    nagios_guest_password: supersecret[m
[32m+[m[32m    nagios_guest_password: f9NANewh[m
     nagios_guest_email: info@automato.io[m
     nagios_guest_host: automato.io[m
     nagios_guest_ip: 13.32.226.117[m
     nagios_monitor_tls: true[m
     nagios_monitor_ssh: false[m
   suzi:[m
[31m-    nagios_guest_password: supersecret[m
[32m+[m[32m    nagios_guest_password: 9BQgF7ew[m
     nagios_guest_email: suzannemateboer@gmail.com[m
     nagios_guest_host: www.shotbysuzanne.com[m
     nagios_guest_ip: 52.215.5.34[m
     nagios_monitor_tls: true[m
     nagios_monitor_ssh: false[m
   piet:[m
[31m-    nagios_guest_password: supersecret[m
[32m+[m[32m    nagios_guest_password: FW8AMufM[m
     nagios_guest_email: piet.karregat@casha.nl[m
     nagios_guest_host: casha.nl[m
     nagios_guest_ip: 141.138.168.128[m
     nagios_monitor_tls: false[m
     nagios_monitor_ssh: false[m
   michael:[m
[31m-    nagios_guest_password: supersecret[m
[32m+[m[32m    nagios_guest_password: 6T9bXxds[m
     nagios_guest_email: michael@look4contract.com[m
     nagios_guest_host: look4contract.com[m
     nagios_guest_ip: 185.56.147.118[m
[1mdiff --git a/playbook.yml b/playbook.yml[m
[1mindex 35ce399..c1ce99b 100644[m
[1m--- a/playbook.yml[m
[1m+++ b/playbook.yml[m
[36m@@ -205,7 +205,7 @@[m
         kern.shminfo.shmall=524288            # total amount of sharedmemory available (pages)[m
         kern.shminfo.shmmni=240               # max number of sharedmemory segments system-wide[m
         # for zabbix agent, double semaphore count - fixes cannot open log: cannot create semaphore set[m
[31m-        kern.seminfo.semmns=240               # max number ofsemaphores system-wide[m
[32m+[m[32m        kern.seminfo.semmns=360               # max number ofsemaphores system-wide[m
         #IPv6[m
         net.inet.ip.forwarding=1[m
         net.inet6.ip6.forwarding=1[m
[36m@@ -304,16 +304,16 @@[m
 [m
             # regular rules[m
             ###########################[m
[32m+[m[32m            # allow traffic from known hosts on some ports. no rate limiting except from default queue.[m
[32m+[m[32m            pass in quick log on egress inet proto tcp from { {{ trusted_hosts | join(', ') }} } to (egress) port { {{ trusted_hosts_ports | join(', ') }}  } queue def[m
[32m+[m
             # allow traffic from any hosts on web and monitoring ports[m
             pass in log on egress inet proto tcp from any to (egress) port { {{ all_hosts_ports | join(', ') }} } flags S/SA keep state \[m
[31m-            (max-src-conn 45, max-src-conn-rate 15/5, overload <flooders> flush global, pflow) queue def[m
[31m-[m
[31m-            # allow traffic from known hosts on some ports. no rate limiting except from default queue.[m
[31m-            pass in log on egress inet proto tcp from { {{ trusted_hosts | join(', ') }} } to (egress) port { {{ trusted_hosts_ports | join(', ') }}  } queue def[m
[32m+[m[32m            (max-src-conn {{ max_src_conn }}, max-src-conn-rate {{ max_src_conn_rate }}, overload <flooders> flush global, pflow) queue def[m
 [m
             # allow traffic from any hosts to ha ip on some ports. with rate limiting.[m
             pass in log on {{ ext_if }} inet proto tcp from any to {{ bgp_ha_ip }} port { {{ trusted_ha_hosts_ports | join(', ') }} } flags S/SA keep state \[m
[31m-            (max-src-conn 45, max-src-conn-rate 15/5, overload <ha_flooders> flush global, pflow) queue def[m
[32m+[m[32m            (max-src-conn {{ max_src_conn }}, max-src-conn-rate {{ max_src_conn_rate }}, overload <ha_flooders> flush global, pflow) queue def[m
 [m
             # pass out quick on external interface[m
             pass out quick log on {{ ext_if }}[m
[36m@@ -321,6 +321,7 @@[m
       marker: "# {mark} ANSIBLE MANAGED BLOCK - pf config"[m
       backup: yes[m
       validate: "/sbin/pfctl -n -f %s"[m
[32m+[m[32m      mode: 0600[m
     tags: pf-config[m
 [m
   - name: pf - check conf[m
[36m@@ -363,6 +364,7 @@[m
       backup: yes[m
       validate: "iked -nf %s"[m
       create: true[m
[32m+[m[32m      mode: 0600[m
     register: iked_config_result[m
     with_dict: "{{ iked_tunnels }}"[m
     tags: iked[m
[36m@@ -514,8 +516,8 @@[m
     blockinfile:[m
       dest: /etc/relayd.conf[m
       block: |[m
[31m-          interval 2[m
[31m-          timeout 2000[m
[32m+[m[32m          timeout 2[m
[32m+[m[32m          interval 4[m
 [m
           table <rrr_hosts> { 37.48.90.117 }[m
           table <wurstbot_http_hosts> { {{ nagios_clients_http | join(' ') }} }[m
[36m@@ -619,6 +621,7 @@[m
       state: present[m
       key: "{{ lookup('file', '~/.ssh/id_ansible.pub') }}"[m
 [m
[32m+[m[32m  #TO FIX: ssh validate fails on OpenBSD 6.3: Match User breaks[m
   - name: ssh - configure sshd[m
     blockinfile:[m
       dest: /etc/ssh/sshd_config[m
[36m@@ -627,6 +630,8 @@[m
         PermitRootLogin no[m
         PasswordAuthentication no[m
         UseDNS no[m
[32m+[m[32m        # Match User ansible[m
[32m+[m[32m        #     PasswordAuthentication yes[m
       backup: yes[m
       marker: "# {mark} ANSIBLE MANAGED BLOCK - ssh config"[m
       validate: "/usr/sbin/sshd -T -f %s"[m
[36m@@ -920,32 +925,24 @@[m
     blockinfile:[m
       dest: /etc/httpd.conf[m
       block: |[m
[31m-        server {{ dns_name }} {[m
[31m-           alias {{ www_dns_name }}[m
[32m+[m[32m        server *.wurstbot.com {[m
            listen on egress port 80[m
            listen on lo port 80[m
            root "/"[m
 [m
[31m-           listen on lo tls port 443[m
[31m-           listen on egress tls port 443[m
[31m-           tls certificate "/etc/ssl/{{ dns_name }}.crt"[m
[31m-           tls key "/etc/ssl/private/{{ dns_name }}.key"[m
[31m-           tls ocsp "/etc/ssl/{{ dns_name }}.der"[m
[31m-           # block return 301 "https://$HTTP_HOST$REQUEST_URI"[m
[31m-           # hsts[m
[31m-[m
            location "/.well-known/acme-challenge/*" {[m
[32m+[m[32m                no authenticate[m
                 root "/acme"[m
                 root strip 2[m
            }[m
 [m
            location "*.php*" {[m
[31m-              fastcgi socket ":{{ php_port }}"[m
[32m+[m[32m                fastcgi socket ":{{ php_port }}"[m
            }[m
 [m
            location "*.cgi" {[m
[31m-                   root { "/" }[m
[31m-                   fastcgi socket "/run/slowcgi.sock"[m
[32m+[m[32m                root { "/" }[m
[32m+[m[32m                fastcgi socket "/run/slowcgi.sock"[m
            }[m
         }[m
       create: true[m
[36m@@ -1060,8 +1057,6 @@[m
 [m
         server {{ repo_dns_name }} {[m
            alias repo{{ node_number }}.wurstbot.com[m
[31m-           listen on egress port 80[m
[31m-           listen on lo port 80[m
            root "/repo"[m
 [m
            listen on lo tls port 443[m
[36m@@ -1082,10 +1077,6 @@[m
               block return 301 "https://cvsweb.openbsd.org$REQUEST_URI"[m
            }[m
 [m
[31m-          location "/.well-known/acme-challenge/*" {[m
[31m-             root "/acme"[m
[31m-             root strip 2[m
[31m-          }[m
         }[m
       create: true[m
       marker: "# {mark} ANSIBLE MANAGED BLOCK - repo vhost"[m
[36m@@ -1144,8 +1135,6 @@[m
       block: |[m
         server {{ dokuwiki_dns_name }} {[m
            alias wiki{{ node_number }}.wurstbot.com[m
[31m-           listen on egress port 80[m
[31m-           listen on lo port 80[m
            root "/dokuwiki"[m
 [m
            listen on lo tls port 443[m
[36m@@ -1169,11 +1158,6 @@[m
             location "*.php*" {[m
                     fastcgi socket ":{{ php_port }}"[m
             }[m
[31m-[m
[31m-            location "/.well-known/acme-challenge/*" {[m
[31m-                root "/acme"[m
[31m-                root strip 2[m
[31m-            }[m
         }[m
       create: false[m
       marker: "# {mark} ANSIBLE MANAGED BLOCK - dokuwiki vhost"[m
[36m@@ -1244,11 +1228,9 @@[m
       block: |[m
         server {{ owncloud_dns_name }} {[m
            alias owncloud{{ node_number }}.wurstbot.com[m
[31m-           listen on egress port 80[m
[31m-           listen on lo port 80[m
            root "/owncloud"[m
 [m
[31m-           listen on lo port 443[m
[32m+[m[32m           listen on lo tls port 443[m
            listen on egress tls port 443[m
            tls certificate "/etc/ssl/{{ dns_name }}.crt"[m
            tls key "/etc/ssl/private/{{ dns_name }}.key"[m
[36m@@ -1269,11 +1251,6 @@[m
             location "*.php*" {[m
                     fastcgi socket ":{{ php_port }}"[m
             }[m
[31m-[m
[31m-            location "/.well-known/acme-challenge/*" {[m
[31m-                root "/acme"[m
[31m-                root strip 2[m
[31m-            }[m
         }[m
       create: false[m
       marker: "# {mark} ANSIBLE MANAGED BLOCK - owncloud vhost"[m
[36m@@ -1295,6 +1272,15 @@[m
   #     marker: "# {mark} ANSIBLE MANAGED BLOCK - owncloud vhost tls"[m
   #   when: use_tls==True[m
 [m
[32m+[m[32m  # TO BE FIXED[m
[32m+[m[32m  # - name: owncloud - configure dns name[m
[32m+[m[32m  #   lineinfile:[m
[32m+[m[32m  #     dest: /var/www/owncloud/config/config.php[m
[32m+[m[32m  #     insertbefore: ^),[m
[32m+[m[32m  #     line: 1 => '{{ owncloud_dns_name }}',[m
[32m+[m[32m  #     create: false[m
[32m+[m[32m  #   register: owncloud_config_results[m
[32m+[m
   - name: owncloud - check httpd config[m
     command: /usr/sbin/httpd -n[m
     register: httpd_result[m
[36m@@ -1572,9 +1558,6 @@[m
       block: |[m
         server {{ mail_dns_name }} {[m
            alias mail{{ node_number }}.wurstbot.com[m
[31m-[m
[31m-           listen on egress port 80[m
[31m-           listen on lo port 80[m
            root "/"[m
 [m
            listen on lo tls port 443[m
[36m@@ -1585,10 +1568,6 @@[m
            # block return 301 "https://$HTTP_HOST$REQUEST_URI"[m
            # hsts[m
 [m
[31m-           location "/.well-known/acme-challenge/*" {[m
[31m-                root "/acme"[m
[31m-                root strip 2[m
[31m-           }[m
         }[m
       create: true[m
       marker: "# {mark} ANSIBLE MANAGED BLOCK - mail vhost"[m
[36m@@ -1969,11 +1948,9 @@[m
       block: |[m
         server {{ zabbix_dns_name }} {[m
            alias zabbix{{ node_number }}.wurstbot.com[m
[31m-           listen on egress port 80[m
[31m-           listen on lo port 80[m
            root "/zabbix"[m
 [m
[31m-           listen on lo port 443[m
[32m+[m[32m           listen on lo tls port 443[m
            listen on egress tls port 443[m
            tls certificate "/etc/ssl/{{ dns_name }}.crt"[m
            tls key "/etc/ssl/private/{{ dns_name }}.key"[m
[36m@@ -1990,10 +1967,6 @@[m
                     fastcgi socket ":{{ php_port }}"[m
             }[m
 [m
[31m-            location "/.well-known/acme-challenge/*" {[m
[31m-                root "/acme"[m
[31m-                root strip 2[m
[31m-            }[m
         }[m
       create: false[m
       marker: "# {mark} ANSIBLE MANAGED BLOCK - zabbix vhost"[m
[36m@@ -2489,9 +2462,6 @@[m
       block: |[m
         server {{ nagios_dns_name }} {[m
            alias nagios{{ node_number }}.wurstbot.com[m
[31m-[m
[31m-           listen on egress port 80[m
[31m-           listen on lo port 80[m
            root "/nagios"[m
 [m
            listen on lo tls port 443[m
[36m@@ -2521,11 +2491,6 @@[m
                     root { "/nagios", strip 1 }[m
             }[m
 [m
[31m-           location "/.well-known/acme-challenge/*" {[m
[31m-                no authenticate[m
[31m-                root "/acme"[m
[31m-                root strip 2[m
[31m-           }[m
         }[m
       create: false[m
       marker: "# {mark} ANSIBLE MANAGED BLOCK - nagios vhost"[m
